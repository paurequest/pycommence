<?xml version="1.0" encoding="utf-8"?>
<topic id="LoadingSchemas" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
      <para>Json.NET Schema represents schemas using the strongly typed <codeEntityReference>T:Newtonsoft.Json.Schema.JSchema</codeEntityReference> object. JSchema is used whenever an application validates JSON.</para>
    </introduction>

<alert class="information">
  <para>
    You do not need to specify the version of the JSON Schema you are loading. When loading an older schema (e.g. Draft 3) renamed schema properties and features will automatically be mapped to the latest version of JSON Schema.
  </para>
</alert>

<section>
  <title>Loading JSON Schemas</title>
<content>
<para>The simplest way to load a JSON Schema is from a string using <codeEntityReference>M:Newtonsoft.Json.Schema.JSchema.Parse(System.String)</codeEntityReference>. This method parses the given JSON Schema string and loads it into a strongly typed <codeEntityReference>T:Newtonsoft.Json.Schema.JSchema</codeEntityReference> object.</para>

<code lang="cs" source="..\Src\Newtonsoft.Json.Schema.Tests\Documentation\LoadingSchemas.cs" region="ParseString" title="Parse JSON Schema string" />

<para>Schemas can also be loaded directly from a <codeEntityReference>T:Newtonsoft.Json.JsonReader</codeEntityReference> using <codeEntityReference>M:Newtonsoft.Json.Schema.JSchema.Load(Newtonsoft.Json.JsonReader)</codeEntityReference>. This is useful when loading a schema from a stream, such as loading from a file using a <codeEntityReference>T:System.IO.FileStream</codeEntityReference>.</para>

<code lang="cs" source="..\Src\Newtonsoft.Json.Schema.Tests\Documentation\LoadingSchemas.cs" region="LoadFile" title="Load JSON Schema file" />

</content>
</section>

<section>
  <title>Resolving externally referenced schemas</title>
<content>
<para>A JSON schema can reference external schemas. External references are typically a URL that points to where the external schema is publically hosted on the Internet. Json.NET Schema supports resolving external schemas with <codeEntityReference>T:Newtonsoft.Json.Schema.JSchemaResolver</codeEntityReference>. The Parse and Load methods on JSchema each have overloads that take a schema resolver.</para>

<para>Json.NET Schema comes with two resolvers. <codeEntityReference>T:Newtonsoft.Json.Schema.JSchemaUrlResolver</codeEntityReference> resolves URL schema references, downloading the URLs content and loading it as a schema. It supports the <codeInline>file://</codeInline> and <codeInline>http://</codeInline> protocols and requests from the <codeEntityReference>T:System.Net.WebRequest</codeEntityReference> class.</para>

<code lang="cs" source="..\Src\Newtonsoft.Json.Schema.Tests\Documentation\LoadingSchemas.cs" region="JSchemaUrlResolver" title="Resolve an external schema over HTTP with JSchemaUrlResolver" />

<para><codeEntityReference>T:Newtonsoft.Json.Schema.JSchemaUrlResolver</codeEntityReference> can resolve relative references. To enable this scenario set the <codeEntityReference>P:Newtonsoft.Json.Schema.JSchemaReaderSettings.BaseUri</codeEntityReference> property when loading the schema with the location you are loading it from. Relative references will be resolved using the base URI.</para>

<code lang="cs" source="..\Src\Newtonsoft.Json.Schema.Tests\Documentation\LoadingSchemas.cs" region="JSchemaUrlResolver_Relative" title="Resolve relative external schema references" />

<para>The second resolver, <codeEntityReference>T:Newtonsoft.Json.Schema.JSchemaPreloadedResolver</codeEntityReference>, allows you to add schema JSON to the resolver and associate it with an ID. The resolver will then load the schema JSON associated with a given ID when it is referenced.</para>
<para>Preloading is useful if you don't want to rely on a third-party website being available when resolving an external schema reference. Copying the schema file into your application and loading it yourself will ensure you never get a network related when loading it.</para>

<code lang="cs" source="..\Src\Newtonsoft.Json.Schema.Tests\Documentation\LoadingSchemas.cs" region="JSchemaPreloadedResolver" title="Resolve an external schema with JSchemaPreloadedResolver" />

  </content>
</section>
    <relatedTopics>
      <codeEntityReference>T:Newtonsoft.Json.Schema.JSchema</codeEntityReference>
      <codeEntityReference>T:Newtonsoft.Json.Schema.JSchemaResolver</codeEntityReference>
      <codeEntityReference>T:Newtonsoft.Json.Schema.JSchemaUrlResolver</codeEntityReference>
      <codeEntityReference>T:Newtonsoft.Json.Schema.JSchemaPreloadedResolver</codeEntityReference>
    </relatedTopics>

  </developerConceptualDocument>
</topic>